<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>phatblat&#39;s reflog</title>
    <description>a few SHAs from a journey through code
</description>
    <link>http://phatblat.com/</link>
    <atom:link href="http://phatblat.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 03 Jan 2016 20:45:05 -0700</pubDate>
    <lastBuildDate>Sun, 03 Jan 2016 20:45:05 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Radar: Apple Pencil Cannot Be Used for Any Screen Edge Swipe Gestures</title>
        <description>&lt;h1 id=&quot;rdar23839606httpwwwopenradarme23839606&quot;&gt;&lt;a href=&quot;http://www.openradar.me/23839606&quot;&gt;rdar://23839606&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/meme-pencil.jpg&quot; alt=&quot;She asked if she could borrow my pencil, so I guess you could say things are getting pretty serious&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 03 Jan 2016 15:05:13 -0700</pubDate>
        <link>http://phatblat.com/radars/2016/01/03/radar-apple-pencil-cannot-be-used-for-any-screen-edge-swipe-gestures.html</link>
        <guid isPermaLink="true">http://phatblat.com/radars/2016/01/03/radar-apple-pencil-cannot-be-used-for-any-screen-edge-swipe-gestures.html</guid>
        
        <category>radar,</category>
        
        <category>apple-pencil,</category>
        
        <category>ipad</category>
        
        
        <category>radars</category>
        
      </item>
    
      <item>
        <title>iPad Pro Mini-Review</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;This was originally posted on Facebook on 2015-12-01. It’s not a very detailed review as it was intended for my non-technical friends and family. Reposting here as the size comparison with the MacBook will probably be interesting to others.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Talked with my dad earlier today and was raving to him how much I love the new iPad Pro. I’ve used every iPad since the original but this is the first one that has the potential to replace a laptop IMHO, at least for casual users or casual use by pro users. Case in point: it’s pretty much all I’ve been using for the last week and a half while I’ve been laid up at home recovering from my accident. The only things I’ve broken out my MacBook for are for Xcode, a second set of browser tabs for some Black Friday and Cyber Monday shopping and to do some general maintenance on my development tools.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The iPro may be a REALLY BIG iPad, but it’s also a really light laptop, depending on how you look at it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, what’s so great about this? It’s “just” a bigger iPad, right? That’s exactly why!&lt;/p&gt;

&lt;p&gt;I don’t even have my Apple Pencil or Smart Keyboard yet (both of which only work with the Pro), but this device finally makes sense because of the big screen.&lt;/p&gt;

&lt;h2 id=&quot;multiple-apps&quot;&gt;Multiple Apps&lt;/h2&gt;

&lt;p&gt;iOS 9 introduces a new Split View feature where you can have two apps onscreen at the same time. The last 3 pictures in this set show this in action. This is only fully supported on the &lt;a href=&quot;http://gadgets.ndtv.com/mobiles/features/ios-9-how-to-use-split-screen-multitasking-and-picture-in-picture-741244?site=classic&quot;&gt;iPad Pro, Air 2 and Mini 4&lt;/a&gt; right now. Developers do have to add Split View support to their apps, otherwise the 2nd app is only a temporary flyover (Apple calls Slide Over). Adding this support is trivial (took me 15 minutes to add it to a Kaiser app), but even Facebook hasn’t updated their app with support for this yet. Expect it to be added very soon.&lt;/p&gt;

&lt;h2 id=&quot;readability&quot;&gt;Readability&lt;/h2&gt;

&lt;p&gt;I use glasses to see a computer screen clearly and without eye strain, even on a laptop. This is because the distance to the screen is right between near sight and far sight. An iPad (or any mobile device) is held nearer to the eyes so I don’t need glasses. Where a device this big excels is that everything is bigger and more readable. The size is so big that I can pull up a photo full screen and show it to someone across the room.&lt;/p&gt;

&lt;p&gt;OK, enough selling, here are the pics. The smaller device is the 2015 12” MacBook. The gray silicone iPad Pro cover is top quality with plush microfiber inside.&lt;/p&gt;

&lt;h1 id=&quot;pictures&quot;&gt;Pictures&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/ipro-review-01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Glorious display. Also, this setup has a blue bias.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ipro-review-02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Not very exciting to look at, but I’m expecting this case to take the wear so the iPad can stay shiny.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ipro-review-03.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So soft&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ipro-review-04.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Silicone case on left, naked iPad Pro on right&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ipro-review-05.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Huge 12.9” screen&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ipro-review-06.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I can’t wait until my Smart Keyboard arrives so I’ll have a stand+keyboard. I paired a normal Apple Bluetooth keyboard with the Pro earlier for some emails, but had to prop the iPad up on a book to use at a desk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ipro-review-07.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2 pound (.9 kg) laptop, 1.5 pound (.68 kg) iPad&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ipro-review-08.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The smaller one can be used to make apps for the bigger one. The odd shine is a cheap skin to prevent scratches.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ipro-review-09.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Safari on the left and Notes app on the right.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ipro-review-10.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Safari on the left and Mail on right composing an email with the split in the middle.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ipro-review-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Again, Safari on the left and Mail on the right composing and email, but with the split moved to the right. Mail adapts to more of the UI on the iPhone.&lt;/p&gt;

</description>
        <pubDate>Sun, 03 Jan 2016 08:53:53 -0700</pubDate>
        <link>http://phatblat.com/2016/01/03/ipro-review.html</link>
        <guid isPermaLink="true">http://phatblat.com/2016/01/03/ipro-review.html</guid>
        
        <category>ipad,</category>
        
        <category>review</category>
        
        
      </item>
    
      <item>
        <title>Close Your PayPal Account</title>
        <description>&lt;h1 id=&quot;wtf&quot;&gt;WTF&lt;/h1&gt;

&lt;p&gt;This post is appalling: &lt;a href=&quot;http://krebsonsecurity.com/2015/12/2016-reality-lazy-authentication-still-the-norm/&quot;&gt;2016 Reality: Lazy Authentication Still the Norm&lt;/a&gt;. The terrorist theme was just a distraction. The fact that his account was hacked a second time, after changing his password and after PayPal was made aware is just pathetic.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In my second call to PayPal, I insisted on speaking with a supervisor. That person was able to tell me that, as I suspected, my (very long and complex) password was never really compromised. The attacker had merely called in to PayPal’s customer support, pretended to be me and was able to reset my password by providing nothing more than the last four digits of my Social Security number and the last four numbers of an old credit card account.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’m not willing to trust access to my money to a company this behind in security practices. I’m sure a lot of banks and utility companies are also vulnerable in the same fashion, but PayPal is a big target and one that I can limit my exposure right now by no longer doing business with them.&lt;/p&gt;

&lt;h1 id=&quot;steps-to-close-your-paypal-account&quot;&gt;Steps to Close Your PayPal Account&lt;/h1&gt;

&lt;p&gt;Here are the steps I went through to close my PayPal account on their full desktop website. I was not able to find a close account option in either their iOS app or mobile website. I removed my bank accounts through the mobile website first before moving to my Mac to finish out the cancellation.&lt;/p&gt;

&lt;h2 id=&quot;login&quot;&gt;1. Login&lt;/h2&gt;

&lt;p&gt;Make sure to use a computer or switch to the “desktop” version of PayPal’s website, if using a mobile device.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-00-login.png&quot; alt=&quot;PayPal login page&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;transfer-money-out-of-paypal-account&quot;&gt;2. Transfer Money Out of PayPal Account&lt;/h2&gt;

&lt;p&gt;PayPal will send you a check if you have any money in your account when it is closed, but they charge a $1.50 fee for this service. It’s much simpler to just transfer any money out of your account first.&lt;/p&gt;

&lt;h2 id=&quot;remove-bank-accounts-and-creditdebit-cards&quot;&gt;3. Remove Bank Accounts and Credit/Debit Cards&lt;/h2&gt;

&lt;p&gt;Click on the “Wallet” tab in the top navigation bar to show any linked bank accounts and credit/debit cards.
Removing these from your account first greatly simplifies the cancellation process as you will not be asked to confirm their account numbers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-00-bankcredit.png&quot; alt=&quot;PayPal Wallet page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is how it should look before you proceed.&lt;/p&gt;

&lt;h2 id=&quot;profile&quot;&gt;4. Profile&lt;/h2&gt;

&lt;p&gt;Click the gear icon on the far right of the top toolbar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-01-header.png&quot; alt=&quot;PayPal header showing Profile button (gear icon)&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;close-account-link&quot;&gt;5. Close Account Link&lt;/h2&gt;

&lt;p&gt;On the Profile page, find the “Close your account” link near the bottom.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-02-profile.png&quot; alt=&quot;PayPal Profile page with &#39;Close account&#39; link&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;a-are-you-sure&quot;&gt;6a. Are you Sure?&lt;/h2&gt;

&lt;p&gt;If you have a newer account with no money on it like one of mine, you might be lucky and get this single confirmation message.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-03b-areyousure.png&quot; alt=&quot;Confirmation message&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click “Close Account” and you’re done.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;b-error&quot;&gt;6b. Error&lt;/h2&gt;

&lt;p&gt;Two of my accounts were not so easy to close. I got this message every time I clicked the “Close your account” link.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-03b-error.png&quot; alt=&quot;Error message from clicking &#39;Close account&#39; link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If this happens to you, click on the “customer service” link.&lt;/p&gt;

&lt;h2 id=&quot;customer-service&quot;&gt;7. Customer Service&lt;/h2&gt;

&lt;p&gt;Click the “Message Center” link.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-04-customerservice.png&quot; alt=&quot;Customer Service page&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;message-center&quot;&gt;8. Message Center&lt;/h2&gt;

&lt;p&gt;Click the “Create New Message” button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-06-messagecenter.png&quot; alt=&quot;Message Center showing now messages and a create button&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;contact-form&quot;&gt;6. Contact Form&lt;/h2&gt;

&lt;p&gt;Select the following topic and subtopic, then click the “Close Account” link.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;My Account&lt;/li&gt;
  &lt;li&gt;Closing a PayPal account&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-06-contact.png&quot; alt=&quot;Request account close from &#39;Email Us&#39; contact form&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;first-confirmation&quot;&gt;7. First confirmation&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-07-confirm.png&quot; alt=&quot;First confirmation&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;reasons&quot;&gt;8. Reasons&lt;/h2&gt;

&lt;p&gt;I refrained from comment, figuring the link to the above post was enough.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-08-reason.png&quot; alt=&quot;Reason for closing account&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;second-confirmation&quot;&gt;9. Second confirmation&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-09-confirm2.png&quot; alt=&quot;Second confirmation&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;third-confirmation&quot;&gt;10. Third confirmation&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-10-confirm3.png&quot; alt=&quot;Third confirmation&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;fourth-confirmation&quot;&gt;11. Fourth confirmation&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-11-confirm4.png&quot; alt=&quot;Fourth confirmation&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;done&quot;&gt;12. Done&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-12-email.png&quot; alt=&quot;Email confirming account closed&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;two-down-one-to-go&quot;&gt;Two Down, One To Go&lt;/h1&gt;

&lt;p&gt;At this point, I’ve cancelled two of my PayPal accounts. I wasn’t able my close my work account because it has a recurring payment on it that I forgot about. I’ll need to contact the vendor to arrange a different billing arrangement first.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/paypal-13-recurringpayment.png&quot; alt=&quot;Email confirming account closed&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Jan 2016 15:42:37 -0700</pubDate>
        <link>http://phatblat.com/2016/01/02/closed-paypal-account.html</link>
        <guid isPermaLink="true">http://phatblat.com/2016/01/02/closed-paypal-account.html</guid>
        
        <category>security,</category>
        
        <category>paypal</category>
        
        
      </item>
    
      <item>
        <title>Radar: Support 32GB of RAM in the Mac Mini</title>
        <description>&lt;h1 id=&quot;rdar24027356httpopenradarme24027356&quot;&gt;&lt;a href=&quot;http://openradar.me/24027356&quot;&gt;rdar://24027356&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/meme-more-ram.png&quot; alt=&quot;Christopher Walken more cowbell SNL skit&quot; title=&quot;Needs more RAM&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 01 Jan 2016 18:43:52 -0700</pubDate>
        <link>http://phatblat.com/radars/2016/01/01/radar-support-32gb-of-ram-in-the-mac-mini.html</link>
        <guid isPermaLink="true">http://phatblat.com/radars/2016/01/01/radar-support-32gb-of-ram-in-the-mac-mini.html</guid>
        
        <category>radars,</category>
        
        <category>mac</category>
        
        
        <category>radars</category>
        
      </item>
    
      <item>
        <title>Mac mini Server</title>
        <description>&lt;h2 id=&quot;traveling-without-a-mac&quot;&gt;Traveling without a Mac&lt;/h2&gt;

&lt;p&gt;My family and I traveled for Christmas this year and I managed to leave the MacBook behind, bringing only iPads and iPhones on the trip.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ipad-sizes.jpg&quot; alt=&quot;&quot; title=&quot;iPhone 5s (left), iPad mini 2 (center), iPad Pro with Smart Keyboard (right)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Wile on the road, there are two things that I wanted to do which I wasn’t able to on my iPad Pro:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Run octopress and jekyll to update this blog&lt;/li&gt;
  &lt;li&gt;Run Xcode to play with some code&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I don’t foresee either of these being possible on iOS in the near future. #1 requires an app to be able to spawn processes, which isn’t currently possible. Apple’s answer to some of the multi-process use cases is &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/General/Conceptual/ExtensibilityPG/&quot;&gt;App Extensions&lt;/a&gt;, introduced in iOS 8, but that doesn’t allow for arbitrary terminal commands. While I’m certain we’ll see Xcode on iOS some day, #2 has similar limitations as Xcode on OS X spawns lots of processes when running builds.&lt;/p&gt;

&lt;p&gt;I attempted to do #1 on a Linux server at my web hosting provider, but was quickly reminded why I normally use Macs.&lt;/p&gt;

&lt;p&gt;It would be nice to access a Mac remotely for these purposes. For security reasons, I do not want to expose my home iMac to the Internet, so a dedicated box is preferred.&lt;/p&gt;

&lt;p&gt;These issues are not critical, but they got me thinking that this “leave the Mac at home” approach isn’t going to work if I’m going to do any development. With &lt;a href=&quot;http://git2go.com&quot;&gt;Git2Go&lt;/a&gt; and &lt;a href=&quot;http://workingcopyapp.com&quot;&gt;Working Copy&lt;/a&gt;, I can commit changes directly to git, but I can’t compile or test them without a Mac. Taking an iPad Pro everywhere is mostly extra weight if I &lt;em&gt;also&lt;/em&gt; have to bring a MacBook; it defeats the purpose of bringing the iPro.&lt;/p&gt;

&lt;h2 id=&quot;macminicolo&quot;&gt;Macminicolo&lt;/h2&gt;

&lt;p&gt;I’ve been aware of &lt;a href=&quot;https://macminicolo.net&quot;&gt;Macminicolo&lt;/a&gt; for years mostly due to &lt;a href=&quot;https://bjango.com/ios/istat&quot;&gt;iStat&lt;/a&gt; for iOS, which appears to no longer be available in the App Store. They specialize in, well, colocation of Mac minis.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mac-mini.png&quot; alt=&quot;&quot; title=&quot;Mac mini&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I finally settled on getting a mini and hosting it there, but was thinking I’d wait until the new mini models come out later in 2016. In typical Apple fashion, there is no announced release date, but looking at their &lt;a href=&quot;http://buyersguide.macrumors.com/#Mac_Mini&quot;&gt;release history&lt;/a&gt; for the mini, they are due for a new model now. Intel’s &lt;a href=&quot;http://www.macrumors.com/2015/09/02/intel-skylake-notebooks-desktops&quot;&gt;Skylake processors&lt;/a&gt; are out and most of the Mac lineup should receive updates in 2016 (perhaps not the Mac Pro).&lt;/p&gt;

&lt;p&gt;However, Macminicolo just launched a &lt;a href=&quot;https://macminicolo.net/2016&quot;&gt;2016 Promo&lt;/a&gt; for a year of 2x Pro service and an upgraded Mac mini for a heavily discounted rate. That was enough to convince me and I went for it.&lt;/p&gt;

&lt;h2 id=&quot;purpose&quot;&gt;Purpose&lt;/h2&gt;

&lt;p&gt;What the heck am I going to do with this? I have a few things in mind:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Website hosting, relocating several sites from &lt;a href=&quot;http://www.dreamhost.com/r.cgi?41837&quot;&gt;DreamHost&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Relocate this reflog for server-side access log-based analytics instead of Google Analytics&lt;/li&gt;
  &lt;li&gt;Minecraft servers (PC &amp;amp; PE)&lt;/li&gt;
  &lt;li&gt;CI server&lt;/li&gt;
  &lt;li&gt;Fastlane and xcodebuild access over SSH using &lt;a href=&quot;https://panic.com/prompt&quot;&gt;Prompt&lt;/a&gt; on iOS&lt;/li&gt;
  &lt;li&gt;Xcode GUI over VNC using &lt;a href=&quot;http://edovia.com/screens&quot;&gt;Screens&lt;/a&gt; on iOS&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;upcoming&quot;&gt;Upcoming&lt;/h2&gt;

&lt;p&gt;In the upcoming months I’ll be posting on topics related to setting up a Mac server, since I’ll be going through it anyway.&lt;/p&gt;

&lt;p&gt;A few years ago, I built the CI stack for iOS and Android apps at Kaiser Permanente. Once that became a full-time job, &lt;a href=&quot;https://twitter.com/CGRekt&quot; class=&quot;user-mention&quot;&gt;@CGRekt&lt;/a&gt; took that over so I could focus on building iOS apps. Now, I’m mainly a user of CI, so I like to play around with it at home where I can break things without affecting others.&lt;/p&gt;

&lt;p&gt;I’ve wanted to write about CI for iOS for years but it’s such a huge subject it’s hard to know where to start. If I post as I go through setting it up, I think it’ll be easier to write and consume.&lt;/p&gt;

</description>
        <pubDate>Thu, 31 Dec 2015 15:08:32 -0700</pubDate>
        <link>http://phatblat.com/2015/12/31/mac-mini-server.html</link>
        <guid isPermaLink="true">http://phatblat.com/2015/12/31/mac-mini-server.html</guid>
        
        <category>mac,</category>
        
        <category>server,</category>
        
        <category>ipad</category>
        
        
      </item>
    
      <item>
        <title>Radar: Add &quot;Lower Power Mode&quot; Toggle to Control Center</title>
        <description>&lt;h1 id=&quot;rdar24027394httpwwwopenradarme24027394&quot;&gt;&lt;a href=&quot;http://www.openradar.me/24027394&quot;&gt;rdar://24027394&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Apple bug reports don’t have to be complicated. They can be a simple feature request.&lt;/p&gt;

&lt;p&gt;Cast your vote by easily duping this using &lt;a href=&quot;https://github.com/amyworrall/QuickRadar&quot;&gt;QuickRadar&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Thu, 31 Dec 2015 05:22:24 -0700</pubDate>
        <link>http://phatblat.com/radars/2015/12/31/radar-add-lower-power-mode-toggle-to-control-center.html</link>
        <guid isPermaLink="true">http://phatblat.com/radars/2015/12/31/radar-add-lower-power-mode-toggle-to-control-center.html</guid>
        
        
        <category>radars</category>
        
      </item>
    
      <item>
        <title>On Blogging</title>
        <description>&lt;h2 id=&quot;original-intent&quot;&gt;Original Intent&lt;/h2&gt;

&lt;p&gt;When I started this blog I had planned on writing lots of highly technical posts on focused topics within iOS development. Swift and iOS are the main topics I read on other people’s blogs and I build iOS apps all day. One of the thoughts in the back of my head was that I also wanted to be recognized as a leader in the iOS community and all those that I look up to have active blogs on the subject. I haven’t turned out to be much of a leader in the blogging space.&lt;/p&gt;

&lt;p&gt;Highly technical posts can be difficult to write, especially when it comes to ensuring they are error-free. There’s also the chore of coming back to edit posts as they become out of date.&lt;/p&gt;

&lt;p&gt;While I thought I was up for the challenge, I was not ready for the amount of time that writing can take, especially with interruptions or a lack of brain power left at the end of a day from spending it all on actually building apps.&lt;/p&gt;

&lt;p&gt;In almost 2 years I’ve written 5 blog posts. I didn’t really have a goal for posting frequency, but this is certainly not as much as I wanted to be writing.&lt;/p&gt;

&lt;h2 id=&quot;new-approach&quot;&gt;New Approach&lt;/h2&gt;

&lt;p&gt;It’s (almost) a new year and I’ve had some big changes (more on this later) and I’ve just &lt;a href=&quot;/octopress/jekyll/blogging/2015/12/21/jekylls-ferarri.html&quot;&gt;rebooted this blog&lt;/a&gt;. Might as well rethink my approach.&lt;/p&gt;

&lt;p&gt;The main thing that I &lt;em&gt;really&lt;/em&gt; want out of this blog is to get better at writing &lt;strong&gt;about&lt;/strong&gt; software. In order to do that, I need to get better at writing words. I write enough code; that’s covered. Once the words come together, it’s pretty easy to whip up some code to go with a post, especially with Xcode Playgrounds these days.&lt;/p&gt;

&lt;h3 id=&quot;topics&quot;&gt;Topics&lt;/h3&gt;

&lt;p&gt;So, at least for a while, I’m not going to try very hard or create some super intense Swift compiler-level technical posts. I’m not going to talk about iOS APIs for a while. I’m just going to write. I’m going to write whatever is on my mind and I’m not going to care who’s listening. There are plenty of cat GIFs out there on the internet if I start boring you. Oh, look! Here’s one:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/cat.gif&quot; alt=&quot;&quot; title=&quot;Cat GIF&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I want to write more often and lowering the bar on difficulty should help with this. Once I get my writing frequency up and post creation time down, then I’ll start working on some harder subjects.&lt;/p&gt;

&lt;h2 id=&quot;strategy&quot;&gt;Strategy&lt;/h2&gt;

&lt;p&gt;I came up with a few steps to help myself with writing quickly:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;write the highlights in tweet-sized bites&lt;/li&gt;
  &lt;li&gt;add vital detail&lt;/li&gt;
  &lt;li&gt;edit&lt;/li&gt;
  &lt;li&gt;post&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I write plenty well in &lt;a href=&quot;https://twitter.com/phatblat&quot; title=&quot;My tweets&quot;&gt;140 character bites&lt;/a&gt;, so I just need to adapt my thinking to longer form.&lt;/p&gt;

&lt;h2 id=&quot;wrap-up&quot;&gt;Wrap-up&lt;/h2&gt;

&lt;p&gt;I’ve been active on Twitter for 8 years now so this shouldn’t be a huge challenge. I figured I’d just “pick it up” when it came to blogging but finding the time has proven to be harder than expected. Hopefully, getting my thought-to-post speed down will help get more of these ideas out of my head and onto the web.&lt;/p&gt;

</description>
        <pubDate>Mon, 28 Dec 2015 22:34:31 -0700</pubDate>
        <link>http://phatblat.com/blogging/2015/12/28/on-blogging.html</link>
        <guid isPermaLink="true">http://phatblat.com/blogging/2015/12/28/on-blogging.html</guid>
        
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>Jekyll&#39;s Ferarri</title>
        <description>&lt;p&gt;I’ve finally gotten around to converting this blog over to &lt;a href=&quot;http://octopress.org&quot;&gt;Octopress 3&lt;/a&gt;. The last hangup was the silliest issue. I was running the commands in the wrong directory.&lt;/p&gt;

&lt;h1 id=&quot;octopress-2-vs-3&quot;&gt;Octopress 2 vs. 3&lt;/h1&gt;

&lt;p&gt;Back at the start of 2014 when I originally set up this blog, it was actually a PITA it get v2 set up. A big part of this was due to the confusing way the markdown/sass source and generated HTML site was stored. The source was actually stored in a &lt;code&gt;source&lt;/code&gt; branch, disconnected from the &lt;code&gt;master&lt;/code&gt; branch in the same repo, the latter being where the generated site ended up. You’d have to make sure &lt;code&gt;source&lt;/code&gt; was checked out before running any of the &lt;code&gt;rake&lt;/code&gt; commands or else get really confusing errors.&lt;/p&gt;

&lt;p&gt;To deploy, you’d run &lt;code&gt;rake generate &amp;amp;&amp;amp; rake deploy&lt;/code&gt; which generates the static content and deploys that according to the configuration. In my case, deploying to GitHub Pages would update the site, but I’d still have to switch to the master branch and pull to update that branch.&lt;/p&gt;

&lt;h2 id=&quot;v3&quot;&gt;V3&lt;/h2&gt;

&lt;p&gt;Much improved over a fancy &lt;a href=&quot;https://github.com/phatblat/phatblat.github.io.bak/blob/source/Rakefile&quot;&gt;Rakefile&lt;/a&gt;, Octopress 3 is a collection of gems.&lt;/p&gt;

&lt;h3 id=&quot;cli&quot;&gt;CLI&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/octopress/octopress#octopress-cli-commands&quot;&gt;CLI commands&lt;/a&gt; are now more intuitive:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;octopress new post &quot;Jekyll&#39;s Ferarri&quot;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;git commit -am &quot;Add &#39;Jekyll&#39;s Ferarri&#39; post&quot;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;octopress deploy&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;I could never remember the &lt;code&gt;rake new_post[&quot;title&quot;]&lt;/code&gt; syntax.&lt;/p&gt;

&lt;h3 id=&quot;separate-repos&quot;&gt;Separate Repos&lt;/h3&gt;

&lt;p&gt;Now, instead of creating your blog from a fork of the framework used to generate it, these two are now cleanly separated. The framework is installed and updated through rubygems while the blog source and generated content are stored in two separate git repos. At least, that’s how it’s arranged when you’re deploying to GitHub Pages.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Source: &lt;a href=&quot;https://github.com/phatblat/reflog&quot;&gt;phatblat/reflog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Content: &lt;a href=&quot;https://github.com/phatblat/phatblat.github.io&quot;&gt;phatblat/phatblat.github.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;migration&quot;&gt;Migration&lt;/h1&gt;

&lt;p&gt;The migration process is actually fairly straight-forward and has been &lt;a href=&quot;http://samwize.com/2015/09/30/migrating-octopress-2-to-octopress-3&quot;&gt;detailed very well&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/samwize&quot;&gt;&lt;a href=&quot;https://twitter.com/samwize&quot; class=&quot;user-mention&quot;&gt;@samwize&lt;/a&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The only point I had trouble with was previewing the site using &lt;code&gt;bundle exec jekyll serve&lt;/code&gt;. I got all kinds of &lt;a href=&quot;https://github.com/benbalter/wordpress-to-jekyll-exporter/issues/37&quot;&gt;build warnings&lt;/a&gt; about missing layouts. It certainly seemed like a path issue, but digging through the config and sass source I couldn’t find anything obviously wrong. Turns out the issue is that this Jekyll command &lt;em&gt;must be run from inside the &lt;a href=&quot;https://github.com/phatblat/reflog/tree/master/www&quot;&gt;&lt;strong&gt;www&lt;/strong&gt;&lt;/a&gt; directory&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&quot;theme&quot;&gt;Theme&lt;/h1&gt;

&lt;p&gt;Now that it’s live on Octopress 3, this site doesn’t look as nice. It’s just using a default Jekyll theme. There are a ton of themes out there for Octopress 2, but since 3 isn’t finished there aren’t a lot of people using it yet or making themes for it. Hopefully, it will be easy to adapt a Jekyll theme.&lt;/p&gt;

&lt;p&gt;Oh well…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/shipit.png&quot; alt=&quot;SHIP IT!&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://octopress.org&quot;&gt;Octopress Official Site&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/octopress/octopress&quot;&gt;Octopress GitHub Repo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/octopress/octopress/issues/30&quot;&gt;v3 Release Concerns Discussion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://octopress.org/2015/01/15/octopress-3.0-is-coming&quot;&gt;v3 is Coming Announcement (2015-01-15)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://samwize.com/2015/09/30/migrating-octopress-2-to-octopress-3&quot;&gt;Migrating Octopress 2 to Octopress 3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://decomplecting.org/blog/2015/05/16/hello-octopress-3-0&quot;&gt;Hello, Octopress 3.0!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lauris.github.io/blogging/2014/08/16/jekyll-vs-octopress&quot;&gt;Jekyll vs. Octopress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 21 Dec 2015 17:37:11 -0700</pubDate>
        <link>http://phatblat.com/octopress/jekyll/blogging/2015/12/21/jekylls-ferarri.html</link>
        <guid isPermaLink="true">http://phatblat.com/octopress/jekyll/blogging/2015/12/21/jekylls-ferarri.html</guid>
        
        
        <category>octopress</category>
        
        <category>jekyll</category>
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>Communicating Between an iOS App and a Watch Extension</title>
        <description>&lt;p&gt;I’m building a WatchKit extension for an existing iOS app and have been experimenting with the “plumbing” between the two. Watch extensions are different animals than other iOS 8 extensions, but there is a lot of overlap in this area. Today I made a diagram to show the options of getting data to the iPhone app from the Watch and vice-versa.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/apple_watch_communication.png&quot; alt=&quot;&#39;a flowchart diagram&#39;&quot; title=&quot;Communicating between an iOS App and a Watch Extension&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is simply a graphical representation of the summary presented in a &lt;a href=&quot;https://devforums.apple.com/thread/256667?tstart=0&quot;&gt;Developer Forums thread&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The real gem in this is that Darwin notifications (&lt;code&gt;CFNotificationCenterGetDarwinNotifyCenter&lt;/code&gt;) can be used to notify the other processes that there is new data available in the shared container. I haven’t worked with Darwin notifications before, but the big difference from NSNotifications is that you can’t pass any data along with it, just an identifier. Oh, and they are inter-process, which is essential for this type of communication.&lt;/p&gt;

&lt;p&gt;Note that “write data to shared container” includes any API that writes out files - just point it inside the NSURL returned &lt;code&gt;-[NSFileManager containerURLForSecurityApplicationGroupIdentifier:]&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;openparentapplicationreply&quot;&gt;openParentApplication:reply:&lt;/h2&gt;

&lt;p&gt;Added in beta 3, this method and the corresponding &lt;code&gt;application:handleWatchKitExtensionRequest:reply:&lt;/code&gt; UIApplicationDelegate method provides a unique option for WatchKit extensions. It is the only way to explicitly wake up the containing iOS app from an Apple Watch if it is suspended or not running, but note that the iOS app is awoken &lt;em&gt;in the background&lt;/em&gt;. The &lt;code&gt;reply&lt;/code&gt; block allows the iOS app to return a small amount of data to the WatchKit extension, but care must be taken with it. You’ll get a warning if the logic on the iOS app side doesn’t call the reply block. Also, ensure that the previous call to &lt;code&gt;openParentApplication:reply:&lt;/code&gt; has finished before making another. I’ve had calls ignored because a previous one was in flight.&lt;/p&gt;

&lt;h2 id=&quot;nsuserdefaults&quot;&gt;NSUserDefaults&lt;/h2&gt;

&lt;p&gt;If you’re using NSUserDefaults, it’s just an API on top of a plist file. When you stand up an NSUserDefaults instance using &lt;code&gt;-initWithSuiteName:&lt;/code&gt; the data ends up in a file &lt;code&gt;&amp;lt;SHARED_CONTAINER&amp;gt;/Library/Preferences/&amp;lt;APP_ID&amp;gt;.plist&lt;/code&gt; (where SHARED_CONTAINER is something like &lt;code&gt;~/Library/Developer/CoreSimulator/Devices/1A8DF360-B0A6-4815-95F3-68A6AB0BCC78/data/Container/Data/Application/&lt;/code&gt;). That file will be written to every time you call &lt;code&gt;+synchronize&lt;/code&gt; or at “periodic intervals”.&lt;/p&gt;

&lt;h2 id=&quot;other-tidbits&quot;&gt;Other Tidbits&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mutualmobile/MMWormhole&quot;&gt;MMWormhole&lt;/a&gt; is a very neat library which handles a lot of these details for you providing a simple API for passing messages between an iOS app and extensions.&lt;/p&gt;

&lt;p&gt;Tom Harrington has some great &lt;a href=&quot;http://atomicbird.com/blog/ios-app-extension-tips&quot;&gt;extension development tips&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Remember to &lt;a href=&quot;https://developer.apple.com/library/ios/technotes/tn2408/_index.html&quot;&gt;stay away from the file coordination APIs&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Feb 2015 22:13:24 -0700</pubDate>
        <link>http://phatblat.com/ios/watchkit/architecture/2015/02/04/communicating-between-an-ios-app-and-a-watch-extension.html</link>
        <guid isPermaLink="true">http://phatblat.com/ios/watchkit/architecture/2015/02/04/communicating-between-an-ios-app-and-a-watch-extension.html</guid>
        
        
        <category>ios</category>
        
        <category>watchkit</category>
        
        <category>architecture</category>
        
      </item>
    
      <item>
        <title>Git Sparse Checkout</title>
        <description>&lt;p&gt;Have you ever wanted to download just a subfolder of a git repo? Sure, you can clone the whole repo and then drill into that subfolder. However, if the point of just bringing down a subfolder is for easier distribution of just some of the files, the other files in the repo can be distracting (i.e. “which sub-sub-sub folder did she say to open?”).&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Git is a system designed to remember every change to the tracked files in a repository. Once a file goes in, it’s there for good since it becomes part of the log history (unless you slice and dice it with filter-branch, but that has side-effects). Since remembering your files and their content is a primary feature, git doesn’t currently have the ability to clone just a subfolder (which would save bandwidth). However, git does have the ability to checkout a subset of the repo, like a subfolder. This is what’s referred to as a “sparse checkout”.&lt;/p&gt;

&lt;p&gt;The exercise here is to get a copy of just the images from my blog. Not terribly exciting, but I’ve devised a script which should be easy for you to adapt for this same purpose for any other repo.&lt;/p&gt;

&lt;h2 id=&quot;the-code&quot;&gt;The Code&lt;/h2&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;sparse_checkout.sh&lt;/span&gt;&lt;a class=&quot;code-highlight-caption-link&quot; href=&quot;https://gist.github.com/a5caa3bb3a3784f03000&quot;&gt;link&lt;/a&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;tmpdir=/tmp/phatblat-images
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;subdir=images/
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;remote_git=git://github.com/phatblat/phatblat.github.io.git
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;remote_https=https://github.com/phatblat/phatblat.github.io.git
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;mkdir $tmpdir
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;cd $tmpdir
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;8&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;git init
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;9&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;git remote add -f origin $remote_git || \
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;10&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	git remote set-url origin $remote_https &amp;amp;&amp;amp; \
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;11&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	git fetch origin
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;12&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;git config core.sparseCheckout true
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;13&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;echo &quot;$subdir&quot; &amp;gt; .git/info/sparse-checkout
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;14&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;git checkout master
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;15&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;16&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;open $subdir&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;I’m going to walk through this script with the lines a bit out of order; variables will be interspersed with the code that uses them. I generally build scripts with all the variables at the top to make it easy to see what can be tweaked, but having them inline makes the logic easier to follow.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;tmpdir=/tmp/phatblat-images
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;mkdir $tmpdir
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;cd $tmpdir
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;git init&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;This sets up a fresh, empty repository in a temporary directory.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;remote_git=git://github.com/phatblat/phatblat.github.io.git
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;git remote add -f origin $remote_git&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;The &lt;strong&gt;-f&lt;/strong&gt; flag to the &lt;code&gt;git remote add&lt;/code&gt; command causes git to immediately fetch from the remote when it is added. This is where this approach is less than idea. All objects in the repo are fetched from the remote, even though only a subset of the files will be checked out. However, this keeps the repo functional as I’ll talk about at the end.&lt;/p&gt;

&lt;h2 id=&quot;git-protocol&quot;&gt;Git Protocol&lt;/h2&gt;

&lt;p&gt;The reason for the &lt;code&gt;git://&lt;/code&gt; protocol is because this is the &lt;a href=&quot;http://git-scm.com/book/en/Git-on-the-Server-The-Protocols#The-Git-Protocol&quot;&gt;fastest transfer protocol available&lt;/a&gt;. This is the best approach for fast, read-only access to a repo, but could fail from inside a corporate firewall.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;remote_https=https://github.com/phatblat/phatblat.github.io.git
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;git remote add -f origin $remote_git || \
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	git remote set-url origin $remote_https &amp;amp;&amp;amp; \
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	git fetch origin&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;If the fetch fails due to the &lt;code&gt;git://&lt;/code&gt; protocol being blocked (port 9418), the indented commands will execute and change the origin remote’s url to one that uses https and try fetching again. There is a significant delay before the fetch fails. I haven’t figured out how to shorten the timeout that git uses.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;git config core.sparseCheckout true
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;subdir=images/
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;echo &quot;$subdir&quot; &amp;gt; .git/info/sparse-checkout&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;The new repo is configured to with sparse checkout enabled for only the “images” folder. No other folders will be checked out.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;git checkout master&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;The checkout is where the filtering happens. Here the &lt;code&gt;master&lt;/code&gt; branch is being checked out, but only the images folder is actually being copied into the work tree.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;subdir=images/
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;open $subdir&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;This &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/open.1.html&quot;&gt;open&lt;/a&gt; command on OS X is very handy for opening a folder in the Finder.&lt;/p&gt;

&lt;h2 id=&quot;use-cases&quot;&gt;Use Cases&lt;/h2&gt;

&lt;h3 id=&quot;designer-managed-images&quot;&gt;Designer-Managed Images&lt;/h3&gt;

&lt;p&gt;Beyond effectively downloading a subfolder, this sparse checkout has other uses. The resulting local repo is a fully functional git repo. You can browse the history and create new commits. This makes it especially handy for designers to manage images without fear of accidentally changing any other files. By checking out only the images folder, finding the existing images is also easier due to less noise from files and folders unrelated to the designers tasks.&lt;/p&gt;

&lt;h3 id=&quot;octopress-zen-mode&quot;&gt;Octopress Zen Mode&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;sparse-checkout&lt;/code&gt; file uses the same syntax as &lt;code&gt;.gitignore&lt;/code&gt;. The following lines tell git to only checkout markdown files:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;*.md
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;*.markdown&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;After changing the &lt;code&gt;.git/info/sparse-checkout&lt;/code&gt; file, do a &lt;code&gt;checkout &amp;lt;branch&amp;gt;&lt;/code&gt; (&lt;code&gt;checkout source&lt;/code&gt; in the case of Octopress) in order to update the work tree with this new “view” of files.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/git-sparse-checkout-markdown.png&quot; alt=&quot;&#39;an image from OS X Terminal showing a tree of only markdown files&#39;&quot; title=&quot;Sparse checkout of only markdown files&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After getting this far into this feature of git, I may end up using it to help reduce the filesystem noise from Octopress. It always takes me a few minutes to remember where everything goes.&lt;/p&gt;

&lt;h2 id=&quot;caveats&quot;&gt;Caveats&lt;/h2&gt;

&lt;p&gt;Note that if you plan to use a repo with sparse checkout for creating new commits and pushing these back to a central remote, you’ll need to ditch the &lt;code&gt;git://&lt;/code&gt; protocol since it can only be used for read-only access. Either HTTPS or &lt;a href=&quot;https://help.github.com/articles/which-remote-url-should-i-use#cloning-with-ssh&quot;&gt;SSH&lt;/a&gt; style URLs can be used for pushing changes up. Also, if you’ve already cloned a repo using the &lt;code&gt;git://&lt;/code&gt; protocol, you don’t need to re-clone it to change this protocol. Just use the &lt;a href=&quot;https://help.github.com/articles/changing-a-remote-s-url&quot;&gt;&lt;code&gt;git remote set-url&lt;/code&gt;&lt;/a&gt; command to change the remote URL.&lt;/p&gt;

&lt;p&gt;For more details around what you can do with it, check out the docs on &lt;a href=&quot;http://git-scm.com/docs/git-read-tree#_sparse_checkout&quot;&gt;sparse checkout&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 14 Sep 2014 17:30:57 -0600</pubDate>
        <link>http://phatblat.com/git/tricks/2014/09/14/git-sparse-checkout.html</link>
        <guid isPermaLink="true">http://phatblat.com/git/tricks/2014/09/14/git-sparse-checkout.html</guid>
        
        
        <category>git</category>
        
        <category>tricks</category>
        
      </item>
    
  </channel>
</rss>
